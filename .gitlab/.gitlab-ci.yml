workflow:
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_EVENT_TYPE == "opened"' # Or synchronize etc.
      when: always # Trigger on PR open/update if you want baseline analysis
stages:
  - code-review

gemini_code_review:
  stage: code-review
  image: python:3.10
  before_script:
    - python -m pip install --upgrade pip
    - pip install --no-cache-dir --upgrade ai-pr-reviewer
  variables:
    GITLAB_API_URL: "https://gitlab.com/api/v4"
    CI_PROJECT_NAMESPACE: "$CI_PROJECT_NAMESPACE"
    CI_PROJECT_ID: "$CI_PROJECT_ID"
    CI_MERGE_REQUEST_IID: "$CI_MERGE_REQUEST_IID"
    GITLAB_TOKEN: "$CI_JOB_TOKEN"
    GEMINI_API_KEY: "$GEMINI_API_KEY"
    AI_MODEL: "gemini-2.5-flash-preview-05-20"
  script:
    - |
      latest_comment=$(python -c "import gitlab; gl = gitlab.Gitlab('$GITLAB_URL', private_token='$GITLAB_TOKEN'); mr = gl.projects.get($CI_PROJECT_ID).mergerequests.get($CI_MERGE_REQUEST_IID); notes = mr.notes.list(order_by='created_at', sort='desc'); print(notes[0].body if notes else '')")
      echo "Latest comment: $latest_comment"
      if [[ "$latest_comment" != *"/ai-pr-reviewer"* ]]; then
        echo "No /ai-pr-reviewer comment found. Skipping job."
        exit 0
      fi
    - ai-pr-reviewer gitlab